<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="131" passed="117" failed="14" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-10-04T02:07:59 MSK" name="CollectionsSuite" finished-at="2020-10-04T02:07:59 MSK" duration-ms="470">
    <groups>
    </groups>
    <test started-at="2020-10-04T02:07:59 MSK" name="MyArraylist test" finished-at="2020-10-04T02:07:59 MSK" duration-ms="163">
      <class name="collections.MyArrayListTest">
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method signature="testAddAll()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testAddAll" finished-at="2020-10-04T02:07:59 MSK" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAll -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testAddAllWithNullArgument()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testAddAllWithNullArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyArrayList.addAll(MyArrayList.java:85)
at collections.MyArrayListTest.testAddAllWithNullArgument(MyArrayListTest.java:89)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAllWithNullArgument -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testAddElementOutOfBounds()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testAddElementOutOfBounds" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.lang.IndexOutOfBoundsException">
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException
at utilities.MyArrayList.boundaryCheckForInsert(MyArrayList.java:52)
at utilities.MyArrayList.add(MyArrayList.java:58)
at collections.MyArrayListTest.testAddElementOutOfBounds(MyArrayListTest.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddElementOutOfBounds -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method signature="testAddNullWithIndex()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testAddNullWithIndex" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method MyArrayListTest.testAddNullWithIndex()[pri:0, instance:collections.MyArrayListTest@6497b078] should have thrown an exception of type class java.lang.NullPointerException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method MyArrayListTest.testAddNullWithIndex()[pri:0, instance:collections.MyArrayListTest@6497b078] should have thrown an exception of type class java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:82)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:747)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:635)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNullWithIndex -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method signature="testAddNullWithoutIndex()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testAddNullWithoutIndex" finished-at="2020-10-04T02:07:59 MSK" duration-ms="3" status="FAIL">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method MyArrayListTest.testAddNullWithoutIndex()[pri:0, instance:collections.MyArrayListTest@6497b078] should have thrown an exception of type class java.lang.NullPointerException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method MyArrayListTest.testAddNullWithoutIndex()[pri:0, instance:collections.MyArrayListTest@6497b078] should have thrown an exception of type class java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:82)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:747)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:635)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNullWithoutIndex -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testAddWithIndex()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testAddWithIndex" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddWithIndex -->
        <test-method signature="testAddWithoutIndex()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testAddWithoutIndex" finished-at="2020-10-04T02:07:59 MSK" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddWithoutIndex -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method signature="testClear()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testClear" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testContainsFalse()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testContainsFalse" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContainsFalse -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method signature="testContainsTrue()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testContainsTrue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContainsTrue -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testContainsWithNullArgument()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testContainsWithNullArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="FAIL">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method MyArrayListTest.testContainsWithNullArgument()[pri:0, instance:collections.MyArrayListTest@6497b078] should have thrown an exception of type class java.lang.NullPointerException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method MyArrayListTest.testContainsWithNullArgument()[pri:0, instance:collections.MyArrayListTest@6497b078] should have thrown an exception of type class java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:82)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:747)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:635)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContainsWithNullArgument -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testGetOutOfBounds()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testGetOutOfBounds" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <exception class="java.lang.IndexOutOfBoundsException">
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException
at utilities.MyArrayList.boundaryCheck(MyArrayList.java:46)
at utilities.MyArrayList.get(MyArrayList.java:105)
at collections.MyArrayListTest.testGetOutOfBounds(MyArrayListTest.java:94)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOutOfBounds -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testInitialSizeWithCapacityArgumentConstructor()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testInitialSizeWithCapacityArgumentConstructor" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialSizeWithCapacityArgumentConstructor -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method signature="testInitialSizeWithDefaultConstructor()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testInitialSizeWithDefaultConstructor" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialSizeWithDefaultConstructor -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method signature="testIsEmptyFalse()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testIsEmptyFalse" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmptyFalse -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method signature="testIsEmptyTrue()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testIsEmptyTrue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmptyTrue -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testIteratorHasNextFalse()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorHasNextFalse" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorHasNextFalse -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testIteratorHasNextTrue()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorHasNextTrue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorHasNextTrue -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method signature="testIteratorNext()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorNext" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorNext -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testIteratorNoSuchElement()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorNoSuchElement" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at utilities.MyArrayList$Iter.next(MyArrayList.java:212)
at collections.MyArrayListTest.testIteratorNoSuchElement(MyArrayListTest.java:214)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorNoSuchElement -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method signature="testRemoveOutOfBounds()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testRemoveOutOfBounds" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <exception class="java.lang.IndexOutOfBoundsException">
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException
at utilities.MyArrayList.boundaryCheck(MyArrayList.java:46)
at utilities.MyArrayList.remove(MyArrayList.java:112)
at collections.MyArrayListTest.testRemoveOutOfBounds(MyArrayListTest.java:115)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveOutOfBounds -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testRemoveWithIndex()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testRemoveWithIndex" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveWithIndex -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testRemoveWithNullArgument()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testRemoveWithNullArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="FAIL">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method MyArrayListTest.testRemoveWithNullArgument()[pri:0, instance:collections.MyArrayListTest@6497b078] should have thrown an exception of type class java.lang.NullPointerException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method MyArrayListTest.testRemoveWithNullArgument()[pri:0, instance:collections.MyArrayListTest@6497b078] should have thrown an exception of type class java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:82)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:747)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:635)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveWithNullArgument -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method signature="testRemoveWithoutIndex()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testRemoveWithoutIndex" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveWithoutIndex -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testSet()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testSet" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testSetOutOfBounds()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testSetOutOfBounds" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <exception class="java.lang.IndexOutOfBoundsException">
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException
at utilities.MyArrayList.boundaryCheck(MyArrayList.java:46)
at utilities.MyArrayList.set(MyArrayList.java:143)
at collections.MyArrayListTest.testSetOutOfBounds(MyArrayListTest.java:138)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetOutOfBounds -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method signature="testSetWithNullArgument()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testSetWithNullArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="FAIL">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Method MyArrayListTest.testSetWithNullArgument()[pri:0, instance:collections.MyArrayListTest@6497b078] should have thrown an exception of type class java.lang.NullPointerException]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Method MyArrayListTest.testSetWithNullArgument()[pri:0, instance:collections.MyArrayListTest@6497b078] should have thrown an exception of type class java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.noException(ExpectedExceptionsHolder.java:82)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:747)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:635)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetWithNullArgument -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testSize()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testSize" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testToArrayWithArgument()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testToArrayWithArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArrayWithArgument -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testToArrayWithNullArgument()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testToArrayWithNullArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyArrayList.toArray(MyArrayList.java:173)
at collections.MyArrayListTest.testToArrayWithNullArgument(MyArrayListTest.java:180)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArrayWithNullArgument -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method is-config="true" signature="destructArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="destructArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructArray -->
        <test-method signature="testToArrayWithoutArgument()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="testToArrayWithoutArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArrayWithoutArgument -->
        <test-method is-config="true" signature="initArray()[pri:0, instance:collections.MyArrayListTest@6497b078]" started-at="2020-10-04T02:07:59 MSK" name="initArray" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initArray -->
      </class> <!-- collections.MyArrayListTest -->
    </test> <!-- MyArraylist test -->
    <test started-at="2020-10-04T02:07:59 MSK" name="MyDLL test" finished-at="2020-10-04T02:07:59 MSK" duration-ms="47">
      <class name="collections.MyDLLTest">
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method signature="testAddAll()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testAddAll" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAll -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testAddAllWithNullArgument()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testAddAllWithNullArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyDLL.addAll(MyDLL.java:121)
at collections.MyDLLTest.testAddAllWithNullArgument(MyDLLTest.java:147)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddAllWithNullArgument -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testAddElementOutOfBounds()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testAddElementOutOfBounds" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.lang.IndexOutOfBoundsException">
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException
at utilities.MyDLL.add(MyDLL.java:199)
at collections.MyDLLTest.testAddElementOutOfBounds(MyDLLTest.java:128)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddElementOutOfBounds -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method signature="testAddNullWithIndex()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testAddNullWithIndex" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyDLL.add(MyDLL.java:184)
at collections.MyDLLTest.testAddNullWithIndex(MyDLLTest.java:134)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNullWithIndex -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method signature="testAddNullWithoutIndex()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testAddNullWithoutIndex" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyDLL.add(MyDLL.java:105)
at collections.MyDLLTest.testAddNullWithoutIndex(MyDLLTest.java:116)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNullWithoutIndex -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testAddWithIndex()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testAddWithIndex" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyDLL.add(MyDLL.java:206)
at collections.MyDLLTest.testAddWithIndex(MyDLLTest.java:122)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddWithIndex -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method signature="testAddWithoutIndex()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testAddWithoutIndex" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddWithoutIndex -->
        <test-method signature="testClear()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testClear" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testContainsFalse()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testContainsFalse" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContainsFalse -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method signature="testContainsTrue()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testContainsTrue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContainsTrue -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testContainsWithNullArgument()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testContainsWithNullArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyDLL.contains(MyDLL.java:47)
at collections.MyDLLTest.testContainsWithNullArgument(MyDLLTest.java:79)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContainsWithNullArgument -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testGetOutOfBounds()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testGetOutOfBounds" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <exception class="java.lang.IndexOutOfBoundsException">
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException
at utilities.MyDLL.get(MyDLL.java:223)
at collections.MyDLLTest.testGetOutOfBounds(MyDLLTest.java:193)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetOutOfBounds -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method signature="testInitialSize()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testInitialSize" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialSize -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testIsEmptyFalse()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testIsEmptyFalse" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmptyFalse -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testIsEmptyTrue()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testIsEmptyTrue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmptyTrue -->
        <test-method signature="testIteratorHasNextFalse()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorHasNextFalse" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorHasNextFalse -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method signature="testIteratorHasNextTrue()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorHasNextTrue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorHasNextTrue -->
        <test-method signature="testIteratorNext()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorNext" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorNext -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method signature="testIteratorNoSuchElement()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorNoSuchElement" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at utilities.MyDLL$Iter.next(MyDLL.java:80)
at collections.MyDLLTest.testIteratorNoSuchElement(MyDLLTest.java:105)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorNoSuchElement -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testRemoveOutOfBounds()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testRemoveOutOfBounds" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.lang.IndexOutOfBoundsException">
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException
at utilities.MyDLL.remove(MyDLL.java:240)
at collections.MyDLLTest.testRemoveOutOfBounds(MyDLLTest.java:173)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveOutOfBounds -->
        <test-method signature="testRemoveWithIndex()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testRemoveWithIndex" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveWithIndex -->
        <test-method signature="testRemoveWithNullArgument()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testRemoveWithNullArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyDLL.remove(MyDLL.java:136)
at collections.MyDLLTest.testRemoveWithNullArgument(MyDLLTest.java:168)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveWithNullArgument -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method signature="testRemoveWithoutIndex()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testRemoveWithoutIndex" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [3] but found [2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [3] but found [2]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at collections.MyDLLTest.testRemoveWithoutIndex(MyDLLTest.java:163)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveWithoutIndex -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testSet()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testSet" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSet -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testSetWithNullArgument()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testSetWithNullArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyDLL.set(MyDLL.java:258)
at collections.MyDLLTest.testSetWithNullArgument(MyDLLTest.java:206)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetWithNullArgument -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method signature="testSetOutOfBounds()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testSetOutOfBounds" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.lang.IndexOutOfBoundsException">
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException
at utilities.MyDLL.set(MyDLL.java:270)
at collections.MyDLLTest.testSetOutOfBounds(MyDLLTest.java:211)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetOutOfBounds -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testSize()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testSize" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testToArrayWithArgument()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testToArrayWithArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArrayWithArgument -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testToArrayWithNullArgument()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testToArrayWithNullArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyDLL.toArray(MyDLL.java:30)
at collections.MyDLLTest.testToArrayWithNullArgument(MyDLLTest.java:63)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArrayWithNullArgument -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="initDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="initDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initDLL -->
        <test-method is-config="true" signature="destructDLL()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="destructDLL" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructDLL -->
        <test-method signature="testToArrayWithoutArgument()[pri:0, instance:collections.MyDLLTest@3972a855]" started-at="2020-10-04T02:07:59 MSK" name="testToArrayWithoutArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArrayWithoutArgument -->
      </class> <!-- collections.MyDLLTest -->
    </test> <!-- MyDLL test -->
    <test started-at="2020-10-04T02:07:59 MSK" name="MyQueue test" finished-at="2020-10-04T02:07:59 MSK" duration-ms="30">
      <class name="collections.MyQueueTest">
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method signature="testDequeue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testDequeue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDequeue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method signature="testDequeueAll()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testDequeueAll" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDequeueAll -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method signature="testDequeueWithEmptyQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testDequeueWithEmptyQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <exception class="exceptions.EmptyQueueException">
            <full-stacktrace>
              <![CDATA[exceptions.EmptyQueueException
at utilities.MyQueue.dequeue(MyQueue.java:37)
at collections.MyQueueTest.testDequeueWithEmptyQueue(MyQueueTest.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- exceptions.EmptyQueueException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDequeueWithEmptyQueue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method signature="testEnqueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testEnqueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnqueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method signature="testEnqueueNull()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testEnqueueNull" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyQueue.enqueue(MyQueue.java:25)
at collections.MyQueueTest.testEnqueueNull(MyQueueTest.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEnqueueNull -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method signature="testEqualsFalseWithDifferentElements()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testEqualsFalseWithDifferentElements" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualsFalseWithDifferentElements -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method signature="testEqualsFalseWithDifferentSize()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testEqualsFalseWithDifferentSize" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualsFalseWithDifferentSize -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method signature="testEqualsTrue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testEqualsTrue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualsTrue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method signature="testInitialSize()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testInitialSize" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialSize -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method signature="testIsEmptyFalse()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testIsEmptyFalse" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmptyFalse -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method signature="testIsEmptyTrue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testIsEmptyTrue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmptyTrue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method signature="testIsFull()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testIsFull" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsFull -->
        <test-method signature="testIteratorHasNextFalse()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorHasNextFalse" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorHasNextFalse -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method signature="testIteratorHasNextTrue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorHasNextTrue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorHasNextTrue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method signature="testIteratorNext()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorNext" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorNext -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method signature="testIteratorNoSuchElement()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorNoSuchElement" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at utilities.MyQueue$Iter.next(MyQueue.java:84)
at collections.MyQueueTest.testIteratorNoSuchElement(MyQueueTest.java:109)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorNoSuchElement -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method signature="testPeekWithEmptyQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testPeekWithEmptyQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <exception class="exceptions.EmptyQueueException">
            <full-stacktrace>
              <![CDATA[exceptions.EmptyQueueException
at utilities.MyQueue.peek(MyQueue.java:47)
at collections.MyQueueTest.testPeekWithEmptyQueue(MyQueueTest.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- exceptions.EmptyQueueException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPeekWithEmptyQueue -->
        <test-method signature="testPeek()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testPeek" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPeek -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method signature="testSize()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testSize" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method signature="testToArrayWithNullArgument()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testToArrayWithNullArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyQueue.toArray(MyQueue.java:113)
at collections.MyQueueTest.testToArrayWithNullArgument(MyQueueTest.java:161)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArrayWithNullArgument -->
        <test-method signature="testToArrayWithArgument()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testToArrayWithArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArrayWithArgument -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method is-config="true" signature="destructQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="destructQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructQueue -->
        <test-method is-config="true" signature="initQueue()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="initQueue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initQueue -->
        <test-method signature="testToArrayWithoutArgument()[pri:0, instance:collections.MyQueueTest@6b8ca3c8]" started-at="2020-10-04T02:07:59 MSK" name="testToArrayWithoutArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArrayWithoutArgument -->
      </class> <!-- collections.MyQueueTest -->
    </test> <!-- MyQueue test -->
    <test started-at="2020-10-04T02:07:59 MSK" name="MyStack test" finished-at="2020-10-04T02:07:59 MSK" duration-ms="29">
      <class name="collections.MyStackTest">
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method signature="testClear()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testClear" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method signature="testContainsFalse()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testContainsFalse" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContainsFalse -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method signature="testContainsTrue()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testContainsTrue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContainsTrue -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method signature="testContainsWithNullArgument()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testContainsWithNullArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyStack.contains(MyStack.java:89)
at collections.MyStackTest.testContainsWithNullArgument(MyStackTest.java:121)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContainsWithNullArgument -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method signature="testEqualsFalseWithDifferentElements()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testEqualsFalseWithDifferentElements" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualsFalseWithDifferentElements -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method signature="testEqualsFalseWithDifferentSize()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testEqualsFalseWithDifferentSize" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualsFalseWithDifferentSize -->
        <test-method signature="testEqualsTrue()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testEqualsTrue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEqualsTrue -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method signature="testInitialSize()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testInitialSize" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInitialSize -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method signature="testIsEmptyFalse()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testIsEmptyFalse" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmptyFalse -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method signature="testIsEmptyTrue()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testIsEmptyTrue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmptyTrue -->
        <test-method signature="testIteratorHasNextFalse()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorHasNextFalse" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorHasNextFalse -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method signature="testIteratorHasNextTrue()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorHasNextTrue" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorHasNextTrue -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method signature="testIteratorNext()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorNext" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorNext -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method signature="testIteratorNoSuchElement()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testIteratorNoSuchElement" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at utilities.MyStack$Iter.next(MyStack.java:152)
at collections.MyStackTest.testIteratorNoSuchElement(MyStackTest.java:191)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIteratorNoSuchElement -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method signature="testPeek()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testPeek" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPeek -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method signature="testPeekWithEmptyStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testPeekWithEmptyStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.util.EmptyStackException">
            <full-stacktrace>
              <![CDATA[java.util.EmptyStackException
at utilities.MyStack.peek(MyStack.java:47)
at collections.MyStackTest.testPeekWithEmptyStack(MyStackTest.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.EmptyStackException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPeekWithEmptyStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method signature="testPop()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testPop" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPop -->
        <test-method signature="testPopWithEmptyStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testPopWithEmptyStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.util.EmptyStackException">
            <full-stacktrace>
              <![CDATA[java.util.EmptyStackException
at utilities.MyStack.pop(MyStack.java:39)
at collections.MyStackTest.testPopWithEmptyStack(MyStackTest.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.EmptyStackException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPopWithEmptyStack -->
        <test-method signature="testPush()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testPush" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPush -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method signature="testPushNull()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testPushNull" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyStack.push(MyStack.java:30)
at collections.MyStackTest.testPushNull(MyStackTest.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPushNull -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method signature="testSearch()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testSearch" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method signature="testSize()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testSize" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method signature="testToArrayWithNullArgument()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testToArrayWithNullArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="2" status="PASS">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at utilities.MyStack.toArray(MyStack.java:76)
at collections.MyStackTest.testToArrayWithNullArgument(MyStackTest.java:105)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArrayWithNullArgument -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method signature="testToArrayWithArgument()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testToArrayWithArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArrayWithArgument -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method is-config="true" signature="initStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="initStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initStack -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method is-config="true" signature="destructStack()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="destructStack" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- destructStack -->
        <test-method signature="testToArrayWithoutArgument()[pri:0, instance:collections.MyStackTest@e7edb54]" started-at="2020-10-04T02:07:59 MSK" name="testToArrayWithoutArgument" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToArrayWithoutArgument -->
      </class> <!-- collections.MyStackTest -->
    </test> <!-- MyStack test -->
    <test started-at="2020-10-04T02:07:59 MSK" name="Parser test" finished-at="2020-10-04T02:07:59 MSK" duration-ms="43">
      <class name="parser.XMLParserTest">
        <test-method signature="testAttributeWithoutClosingQuote()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testAttributeWithoutClosingQuote" finished-at="2020-10-04T02:07:59 MSK" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAttributeWithoutClosingQuote -->
        <test-method signature="testEmptyFile()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testEmptyFile" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.fail(Assert.java:106)
at parser.XMLParserTest.testEmptyFile(XMLParserTest.java:22)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyFile -->
        <test-method signature="testEmptyTag()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testEmptyTag" finished-at="2020-10-04T02:07:59 MSK" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [0] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [0] but found [0]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failEquals(Assert.java:1041)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:147)
at org.testng.Assert.assertNotEquals(Assert.java:1531)
at org.testng.Assert.assertNotEquals(Assert.java:1535)
at parser.XMLParserTest.testEmptyTag(XMLParserTest.java:31)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyTag -->
        <test-method signature="testEmptyTagContent()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testEmptyTagContent" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyTagContent -->
        <test-method signature="testInvalidClosingTagsSequence()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testInvalidClosingTagsSequence" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidClosingTagsSequence -->
        <test-method signature="testMissingBracket()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testMissingBracket" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMissingBracket -->
        <test-method signature="testMissingClosingTag()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testMissingClosingTag" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMissingClosingTag -->
        <test-method signature="testMissingRootTag()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testMissingRootTag" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMissingRootTag -->
        <test-method signature="testNotClosedComment()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testNotClosedComment" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNotClosedComment -->
        <test-method signature="testNotXML()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testNotXML" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNotXML -->
        <test-method signature="testSelfClosingTag()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testSelfClosingTag" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0] but found [2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0] but found [2]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at parser.XMLParserTest.testSelfClosingTag(XMLParserTest.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSelfClosingTag -->
        <test-method signature="testTagWithAmpersand()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testTagWithAmpersand" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTagWithAmpersand -->
        <test-method signature="testTagWithApostrophe()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testTagWithApostrophe" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTagWithApostrophe -->
        <test-method signature="testTagWithAttribute()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testTagWithAttribute" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTagWithAttribute -->
        <test-method signature="testTagWithCDATA()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testTagWithCDATA" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0] but found [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0] but found [1]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at parser.XMLParserTest.testTagWithCDATA(XMLParserTest.java:171)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTagWithCDATA -->
        <test-method signature="testTagWithGreaterSign()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testTagWithGreaterSign" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTagWithGreaterSign -->
        <test-method signature="testTagWithInvalidAmpersand()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testTagWithInvalidAmpersand" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect [0] but found [0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect [0] but found [0]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failEquals(Assert.java:1041)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:147)
at org.testng.Assert.assertNotEquals(Assert.java:1531)
at org.testng.Assert.assertNotEquals(Assert.java:1535)
at parser.XMLParserTest.testTagWithInvalidAmpersand(XMLParserTest.java:115)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTagWithInvalidAmpersand -->
        <test-method signature="testTagWithInvalidLessSign()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testTagWithInvalidLessSign" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTagWithInvalidLessSign -->
        <test-method signature="testTagWithLessSign()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testTagWithLessSign" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTagWithLessSign -->
        <test-method signature="testTagWithQuote()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testTagWithQuote" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTagWithQuote -->
        <test-method signature="testValidXML()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testValidXML" finished-at="2020-10-04T02:07:59 MSK" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidXML -->
        <test-method signature="testWithComment()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testWithComment" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0] but found [2]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0] but found [2]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at parser.XMLParserTest.testWithComment(XMLParserTest.java:150)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithComment -->
        <test-method signature="testWithProlog()[pri:0, instance:parser.XMLParserTest@cad498c]" started-at="2020-10-04T02:07:59 MSK" name="testWithProlog" finished-at="2020-10-04T02:07:59 MSK" duration-ms="0" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [0] but found [1]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [0] but found [1]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:907)
at org.testng.Assert.assertEquals(Assert.java:917)
at parser.XMLParserTest.testWithProlog(XMLParserTest.java:157)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithProlog -->
      </class> <!-- parser.XMLParserTest -->
    </test> <!-- Parser test -->
  </suite> <!-- CollectionsSuite -->
</testng-results>
